{"version":3,"sources":["../../../src/components/Base/Tag.js"],"names":["Tag","props","children","close","styles","create","tag","fontFamily","sans","position","display","border","marginRight","space1","marginBottom","borderColor","color","borderBase","borderRadius","space05","backgroundColor","padding","paddingRight","space4","label","textBase","textLightO","top","right","space0","defaultProps","baseWhite","propTypes","bool","string"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,SAANA,GAAM,CAACC,KAAD,EAAW;AAAA,MACbC,QADa,GACMD,KADN,CACbC,QADa;AAAA,MACJC,KADI,GACMF,KADN,CACJE,KADI;;;AAGrB,MAAMC,SAAS,sBAAWC,MAAX,CAAkB;AAC/BC;AACEC,kBAAY,iBAAMC,IADpB;AAEEC,gBAAU,UAFZ;AAGEC,eAAS,cAHX;AAIEC,cAAQ,WAJV;AAKEC,mBAAa,mBAAQC,MALvB;AAMEC,oBAAc,mBAAQD,MANxB;AAOEE,mBAAad,MAAMe,KAAN,KAAgB,SAAhB,GAA4B,kBAAOC,UAAnC,GAAgDhB,MAAMe,KAPrE;AAQEE,oBAAc,mBAAQC,OARxB;AASEC,uBAAiBnB,MAAMe,KATzB;AAUEK,eAAS,mBAAQR,MAVnB;AAWES,oBAAcrB,MAAME,KAAN,GAAc,mBAAQoB,MAAtB,GAA+B,mBAAQV;AAXvD,OAYK,2BAAW,MAAX,EAAkB,MAAlB,CAZL,CAD+B;AAe/BW,WAAM;AACJR,aAAOf,MAAMe,KAAN,KAAgB,SAAhB,GAA4B,kBAAOS,QAAnC,GAA8C,kBAAOC;AADxD,KAfyB;AAkB/BvB;AACEM,gBAAU,UADZ;AAEEkB,WAAK,mBAAQd,MAFf;AAGEe,aAAO,mBAAQC,MAHjB;AAIEb,aAAOf,MAAMe,KAAN,KAAgB,SAAhB,GAA4B,kBAAOS,QAAnC,GAA8C,kBAAOC;AAJ9D,OAKK,2BAAW,MAAX,EAAkB,MAAlB,CALL;AAlB+B,GAAlB,CAAf;;AA2BA,SACE;AAAA;AAAA,MAAM,WAAW,oBAAItB,OAAOE,GAAX,CAAjB;AACIJ,gBACA;AAAA;AAAA,QAAM,WAAW,oBAAIE,OAAOoB,KAAX,CAAjB;AAAsCtB;AAAtC,KAFJ;AAIIC,aACA;AAAA;AAAA,QAAK,gBAAc,oBAAIC,OAAOD,KAAX,CAAnB;AAAwC,8CAAM,MAAM,iBAAMA,KAAlB;AAAxC;AALJ,GADF;AAUD,CAxCD;;AA0CAH,IAAI8B,YAAJ,GAAmB;AACjB3B,SAAO,KADU;AAEjBa,SAAO,kBAAOe;AAFG,CAAnB;;AAKA/B,IAAIgC,SAAJ,GAAgB;AACd;AACA7B,SAAO,oBAAU8B,IAFH;AAGd;AACAjB,SAAO,oBAAUkB;AAJH,CAAhB;;kBAQelC,G","file":"Tag.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, css } from 'aphrodite';\nimport { Icon } from 'components';\nimport { colors, fonts, fontStyles, icons, spacing } from 'common/styles/variables';\n\nconst Tag = (props) => {\n  const { children,close } = props;\n\n  const styles = StyleSheet.create({\n    tag:{\n      fontFamily: fonts.sans,\n      position: 'relative',\n      display: 'inline-block',\n      border: '1px solid',\n      marginRight: spacing.space1,\n      marginBottom: spacing.space1,\n      borderColor: props.color === '#FFFFFF' ? colors.borderBase : props.color,\n      borderRadius: spacing.space05,\n      backgroundColor: props.color,\n      padding: spacing.space1,\n      paddingRight: props.close ? spacing.space4 : spacing.space1,\n      ...fontStyles('13px','16px'),\n    },\n    label:{\n      color: props.color === '#FFFFFF' ? colors.textBase : colors.textLightO,\n    },\n    close:{\n      position: 'absolute',\n      top: spacing.space1,\n      right: spacing.space0,\n      color: props.color === '#FFFFFF' ? colors.textBase : colors.textLightO,\n      ...fontStyles('22px','18px'),\n    },\n  });\n\n  return (\n    <span className={css(styles.tag)}>\n      { children &&\n        <span className={css(styles.label)}>{ children }</span>\n      }\n      { close &&\n        <div className={`${css(styles.close)}`}><Icon name={icons.close}/></div>\n      }\n    </span>\n  )\n}\n\nTag.defaultProps = {\n  close: false,\n  color: colors.baseWhite,\n}\n\nTag.propTypes = {\n  /** Should be replaced with onClick logic */\n  close: PropTypes.bool,\n  /** Color options from variables.js */\n  color: PropTypes.string,\n};\n\n\nexport default Tag;\n"]}