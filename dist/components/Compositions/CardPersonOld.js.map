{"version":3,"sources":["../../../src/components/Compositions/CardPersonOld.js"],"names":["CardPerson","props","heading","meta","moreLink","noVisual","visual","styles","create","cardPerson","display","width","marginBottom","space2","padding","space3","borderBottom","borderColor","borderBase","content","float","wrapper","space1","marginRight","maxWidth","table","fontFamily","sans","td","paddingRight","paddingBottom","space05","defaultProps","propTypes","string","bool"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AAGA,IAAMA,aAAa,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA,MAEpBC,OAFoB,GAE0BD,KAF1B,CAEpBC,OAFoB;AAAA,MAEXC,IAFW,GAE0BF,KAF1B,CAEXE,IAFW;AAAA,MAELC,QAFK,GAE0BH,KAF1B,CAELG,QAFK;AAAA,MAEKC,QAFL,GAE0BJ,KAF1B,CAEKI,QAFL;AAAA,MAEeC,MAFf,GAE0BL,KAF1B,CAEeK,MAFf;;;AAI5B,MAAMC,SAAS,sBAAWC,MAAX,CAAkB;AAC/BC,gBAAW;AACTC,eAAS,cADA;AAETC,aAAO,MAFE;AAGTC,oBAAc,mBAAQC,MAHb;AAITC,eAAS,mBAAQC,MAJR;AAKTC,oBAAc,WALL;AAMTC,mBAAa,kBAAOC;;AANX,KADoB;AAU/BC,aAAQ;AACNC,aAAO;AADD,KAVuB;AAa/BC,aAAQ;AACNT,oBAAc,mBAAQU;AADhB,KAbuB;AAgB/BhB,YAAO;AACLiB,mBAAa,mBAAQV,MADhB;AAELW,gBAAU,OAFL;AAGLJ,aAAO;AAHF,KAhBwB;AAqB/BK;AACEC,kBAAY,iBAAMC,IADpB;AAEEf,oBAAc,mBAAQU;AAFxB,OAGK,2BAAW,MAAX,EAAkB,MAAlB,CAHL,CArB+B;AA0B/BM,QAAG;AACDC,oBAAc,mBAAQhB,MADrB;AAEDiB,qBAAe,mBAAQC;AAFtB;AA1B4B,GAAlB,CAAf;;AAgCA,SACE;AAAA;AAAA,MAAK,WAAW,oBAAIxB,OAAOE,UAAX,CAAhB;AACIH,cAAU,CAACD,QAAX,IACA;AAAA;AAAA,QAAK,WAAW,oBAAIE,OAAOD,MAAX,CAAhB;AAAsCA;AAAtC,KAFJ;AAIE;AAAA;AAAA,QAAK,WAAW,oBAAIC,OAAOY,OAAX,CAAhB;AACE;AAAA;AAAA,UAAK,WAAW,oBAAIZ,OAAOc,OAAX,CAAhB;AACE;AAAA;AAAA,YAAS,MAAK,QAAd,EAAuB,QAAO,QAA9B;AACInB;AADJ,SADF;AAIE;AAAA;AAAA,YAAS,MAAK,MAAd,EAAqB,OAAM,MAA3B,EAAkC,QAAQ,QAA1C;AAAsDC;AAAtD;AAJF,OADF;AAOE;AAAA;AAAA,UAAO,WAAW,oBAAII,OAAOkB,KAAX,CAAlB;AACE;AAAA;AAAA;AACE;AAAA;AAAA,cAAI,WAAW,oBAAIlB,OAAOqB,EAAX,CAAf;AAA+B;AAAA;AAAA;AAAA;AAAA;AAA/B,WADF;AAEE;AAAA;AAAA,cAAI,WAAW,oBAAIrB,OAAOqB,EAAX,CAAf;AAAA;AAAA;AAFF,SADF;AAKE;AAAA;AAAA;AACE;AAAA;AAAA,cAAI,WAAW,oBAAIrB,OAAOqB,EAAX,CAAf;AAA+B;AAAA;AAAA;AAAA;AAAA;AAA/B,WADF;AAEE;AAAA;AAAA,cAAI,WAAW,oBAAIrB,OAAOqB,EAAX,CAAf;AAAA;AAAA;AAFF;AALF,OAPF;AAiBIxB,kBACA;AAAA;AAAA;AAAA;AAAA;AAlBJ;AAJF,GADF;AA4BD,CAhED;;AAmEAJ,WAAWgC,YAAX,GAA0B;AACxB9B,WAAS,IADe;AAExBC,QAAM,EAFkB;AAGxBE,YAAU,IAHc;AAIxBC,UAAQ,IAJgB;AAKxBF,YAAU;AALc,CAA1B;;AAQAJ,WAAWiC,SAAX,GAAuB;AACrB/B,WAAS,oBAAUgC,MADE;AAErB/B,QAAM,oBAAU+B,MAFK;AAGrB7B,YAAU,oBAAU8B,IAHC;AAIrB7B,UAAQ,oBAAU4B,MAJG;AAKrB9B,YAAU,oBAAU+B;AALC,CAAvB;;kBAQenC,U","file":"CardPersonOld.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, css } from 'aphrodite';\nimport { ButtonViewAll, Copy, HeaderArticle, Heading, HeadingMeta, HeadingSmall, HeadingSection, MoreLink } from 'components';\nimport { fonts, fontStyles, fontWeight, colors, spacing, letterSpacing, opacity } from 'common/styles/variables';\n\n\nconst CardPerson = (props) => {\n\n  const { heading, meta, moreLink, noVisual, visual } = props;\n\n  const styles = StyleSheet.create({\n    cardPerson:{\n      display: 'inline-block',\n      width: '100%',\n      marginBottom: spacing.space2,\n      padding: spacing.space3,\n      borderBottom: '1px solid',\n      borderColor: colors.borderBase,\n\n    },\n    content:{\n      float: 'left',\n    },\n    wrapper:{\n      marginBottom: spacing.space1,\n    },\n    visual:{\n      marginRight: spacing.space2,\n      maxWidth: '140px',\n      float: 'left',\n    },\n    table:{\n      fontFamily: fonts.sans,\n      marginBottom: spacing.space1,\n      ...fontStyles('12px','14px'),\n    },\n    td:{\n      paddingRight: spacing.space2,\n      paddingBottom: spacing.space05,\n    }\n  });\n\n  return (\n    <div className={css(styles.cardPerson)}>\n      { visual && !noVisual &&\n        <div className={css(styles.visual)}>{ visual }</div>\n      }\n      <div className={css(styles.content)}>\n        <div className={css(styles.wrapper)}>\n          <Heading size=\"medium\" weight=\"medium\">\n            { heading }\n          </Heading>\n          <Heading size=\"tiny\" color=\"blue\" weight={\"medium\"}>{ meta }</Heading>\n        </div>\n        <table className={css(styles.table)}>\n          <tr>\n            <td className={css(styles.td)}><strong>Telephone:</strong></td>\n            <td className={css(styles.td)}>Elit Condimentum</td>\n          </tr>\n          <tr>\n            <td className={css(styles.td)}><strong>Email:</strong></td>\n            <td className={css(styles.td)}>Ipsum Fermentum</td>\n          </tr>\n        </table>\n        { moreLink &&\n          <MoreLink>More info</MoreLink>\n        }\n      </div>\n    </div>\n  )\n}\n\n\nCardPerson.defaultProps = {\n  heading: null,\n  meta: '',\n  noVisual: true,\n  visual: null,\n  moreLink: true,\n}\n\nCardPerson.propTypes = {\n  heading: PropTypes.string,\n  meta: PropTypes.string,\n  noVisual: PropTypes.bool,\n  visual: PropTypes.string,\n  moreLink: PropTypes.bool,\n};\n\nexport default CardPerson;\n"]}