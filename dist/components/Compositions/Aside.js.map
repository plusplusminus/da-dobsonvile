{"version":3,"sources":["../../../src/components/Compositions/Aside.js"],"names":["createMarkup","content","__html","styles","card","base","backgroundColor","bgLight","display","horizontal","paddingTop","space4","borderRadius","space1","overflow","flexDirection","marginBottom","space5","paddingBottom","space6","space0","vertical","wrapper","padding","figure","margin","width","marginLeft","order","image","height","Aside","title","url","imageUrl","paragraph","cta","small","children","meta","baseStyles","create","propTypes","string","isRequired","bool","defaultProps"],"mappings":"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","file":"Aside.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport { Copy, Heading, MoreLink } from \"components\";\nimport { fonts, fontStyles, fontWeight, colors, spacing, letterSpacing, opacity, media } from \"../../common/styles/variables\";\nimport { default as ButtonTest } from 'components/Button'\n\n\nconst createMarkup = (content) => ({ __html: `${content}` });\n\nconst styles = {\n  card: {\n    base:{\n      backgroundColor: colors.bgLight,\n      display: 'flex',\n    },\n    horizontal:{\n      paddingTop: spacing.space4,\n      borderRadius: spacing.space1,\n      overflow: 'hidden',\n      flexDirection: 'column',\n      marginBottom: spacing.space5,\n      '@media (min-width: 768px)': {\n        flexDirection: 'row',\n        paddingTop: spacing.space4,\n        paddingBottom: spacing.space6,\n        borderRadius: spacing.space0,\n        marginBottom: spacing.space0,\n      }\n    },\n    vertical:{\n      borderRadius: spacing.space1,\n      overflow: 'hidden',\n      flexDirection: 'column',\n      marginBottom: spacing.space5,\n    }\n  },\n  wrapper: {\n    base:{\n    },\n    vertical: {\n      padding: spacing.space4,\n      paddingBottom: spacing.space6,\n    },\n    horizontal: {\n      paddingTop: spacing.space4,\n      paddingBottom: spacing.space6,\n      '@media (min-width: 768px)': {\n        paddingTop: spacing.space0,\n        paddingBottom: spacing.space0,\n      }\n    }\n  },\n  figure: {\n    base: {\n      margin: 0,\n    },\n    vertical:{\n      width: '100%',\n    },\n    horizontal:{\n      width: '100%',\n      '@media (min-width: 768px)': {\n        marginLeft: '5%',\n        order: '1',\n      }\n    },\n    image: {\n      display: 'block',\n      width: '100%',\n      height: 'auto',\n    },\n  },\n};\n\nconst Aside = ({ title, url, imageUrl, paragraph, cta, vertical, horizontal, small, children, meta }) => {\n\n  const baseStyles = StyleSheet.create({\n    card: {\n      ...styles.card.base,\n      ...(vertical && styles.card.vertical),\n      ...(horizontal && styles.card.horizontal),\n    },\n    wrapper: {\n      ...styles.wrapper.base,\n      ...(horizontal && styles.wrapper.horizontal),\n      ...(vertical && styles.wrapper.vertical),\n    },\n    figure: {\n      ...styles.figure.base,\n      ...(horizontal && styles.figure.horizontal),\n      ...(vertical && styles.figure.vertical),\n    },\n    image: {\n      ...styles.figure.image,\n    }\n  });\n\n  return (\n    <aside className={css(baseStyles.card)}>\n      { imageUrl &&\n        <figure className={css(baseStyles.figure)}>\n          <img src={imageUrl} alt=\"\" className={css(baseStyles.image)} />\n        </figure>\n      }\n      <div className={css(baseStyles.wrapper)}>\n        { meta &&\n          <Heading\n            level={6}\n            color={\"blue\"}\n            size={\"tiny\"}\n            weight={\"regular\"}\n            tracking={\"small\"}\n            uppercase\n          >\n            { meta }\n          </Heading>\n        }\n\n        { title &&\n          <Heading\n            color=\"blue\"\n            size={ !small ? \"large\" : \"small\"}\n            mb=\"small\"\n          >\n            { title }\n          </Heading>\n        }\n\n        { paragraph &&\n          <Copy\n            mb={ !small ? \"large\" : \"medium\"}\n            size={ !small ? \"medium\" : \"small\"}\n          >\n            { paragraph }\n          </Copy>\n        }\n\n        { children && children }\n\n        { cta && !small &&\n          <ButtonTest color={\"blue\"}>\n            { cta }\n          </ButtonTest>\n        }\n        { cta && small &&\n          <MoreLink color={\"blue\"}>\n            { cta }\n          </MoreLink>\n        }\n      </div>\n    </aside>\n  );\n}\n\nAside.propTypes = {\n  /** Title of Card */\n  title: PropTypes.string.isRequired,\n  /** Paragraph content of Card */\n  paragraph: PropTypes.string,\n  /** URL of Card */\n  url: PropTypes.string.isRequired,\n  /** ImageURL of Card */\n  imageUrl: PropTypes.string,\n  /** Meta text to appear above Title */\n  meta: PropTypes.string,\n  /** Call to Action of Card */\n  cta: PropTypes.string.isRequired,\n  /** Is card vertically aligned */\n  vertical: PropTypes.bool.isRequired,\n  /** Is card horizontaly aligned */\n  horizontal: PropTypes.bool.isRequired,\n  /** Is this a small version of the card? Used in narrow sidebar and below article */\n  small: PropTypes.bool.isRequired,\n};\n\nAside.defaultProps = {\n  title: null,\n  url: null,\n  meta: null,\n  imageUrl: null,\n  paragraph: null,\n  cta: null,\n  vertical: false,\n  horizontal: false,\n  small: false,\n};\n\nexport default Aside;\n"]}