{"version":3,"sources":["../../../src/components/Compositions/CardProduct.js"],"names":["createMarkup","content","__html","styles","card","backgroundColor","bgLight","display","borderRadius","space1","overflow","flexDirection","marginBottom","space5","wrapper","padding","space4","paddingBottom","space6","figure","base","width","margin","image","height","CardProduct","title","url","imageUrl","text","cta","small","children","meta","baseStyles","create","propTypes","string","isRequired","bool","defaultProps"],"mappings":"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","file":"CardProduct.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport { Copy, Heading, MoreLink } from \"components\";\nimport { fonts, fontStyles, fontWeight, colors, spacing, letterSpacing, opacity, media } from \"../../common/styles/variables\";\nimport {default as ButtonTest} from 'components/Button'\n\n\nconst createMarkup = (content) => ({ __html: `${content}` });\n\nconst styles = {\n  card: {\n    backgroundColor: colors.bgLight,\n    display: 'flex',\n    borderRadius: spacing.space1,\n    overflow: 'hidden',\n    flexDirection: 'column',\n    marginBottom: spacing.space5,\n  },\n  wrapper: {\n    padding: spacing.space4,\n    paddingBottom: spacing.space6,\n  },\n  figure: {\n    base: {\n      width: '100%',\n      margin: 0,\n    },\n    image: {\n      display: 'block',\n      width: '100%',\n      height: 'auto',\n    },\n  },\n};\n\nconst CardProduct = ({ title, url, imageUrl, text, cta, small, children, meta }) => {\n\n  const baseStyles = StyleSheet.create({\n    card: {\n      ...styles.card,\n    },\n    wrapper: {\n      ...styles.wrapper,\n    },\n    figure: {\n      ...styles.figure.base,\n    },\n    image: {\n      ...styles.figure.image,\n    }\n  });\n\n  return (\n    <aside className={css(baseStyles.card)}>\n      { imageUrl &&\n        <figure className={css(baseStyles.figure)}>\n          <img src={imageUrl} alt=\"\" className={css(baseStyles.image)} />\n        </figure>\n      }\n      <div className={css(baseStyles.wrapper)}>\n        { meta &&\n          <Heading\n            level={6}\n            color={\"blue\"}\n            size={\"tiny\"}\n            weight={\"regular\"}\n            tracking={\"small\"}\n            uppercase\n          >\n            { meta }\n          </Heading>\n        }\n\n        { title &&\n          <Heading\n            color=\"blue\"\n            size={ !small ? \"large\" : \"small\"}\n            mb=\"small\"\n          >\n            { title }\n          </Heading>\n        }\n\n        { text &&\n          <Copy\n            mb={ !small ? \"large\" : \"medium\"}\n            size={ !small ? \"medium\" : \"small\"}\n          >\n            { text }\n          </Copy>\n        }\n\n        { children && children }\n\n      </div>\n    </aside>\n  );\n}\n\nCardProduct.propTypes = {\n  /** Title of Card */\n  title: PropTypes.string.isRequired,\n  /** Paragraph content of Card */\n  text: PropTypes.string,\n  /** URL of Card */\n  url: PropTypes.string.isRequired,\n  /** ImageURL of Card */\n  imageUrl: PropTypes.string,\n  /** Meta text to appear above Title */\n  meta: PropTypes.string,\n  /** Is this a small version of the card? Used in narrow sidebar and below article */\n  small: PropTypes.bool.isRequired,\n};\n\nCardProduct.defaultProps = {\n  title: null,\n  url: null,\n  meta: null,\n  imageUrl: null,\n  text: null,\n  cta: null,\n  small: false,\n};\n\nexport default CardProduct;\n"]}