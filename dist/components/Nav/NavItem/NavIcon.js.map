{"version":3,"sources":["../../../../src/components/Nav/NavItem/NavIcon.js"],"names":["NavIcon","props","content","color","children","iconName","iconColor","styles","create","navIcon","padding","fontFamily","sans","fontWeight","regular","cursor","textAlign","display","alignItems","border","background","baseTransparent","marginBottom","space1","transition","base","opacity","hover","label","marginLeft","icon","disabled","defaultProps","textBase","propTypes","string"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAEA,IAAMA,UAAU,SAAVA,OAAU,CAACC,KAAD,EAAW;AAAA,MACjBC,OADiB,GACiCD,KADjC,CACjBC,OADiB;AAAA,MACRC,KADQ,GACiCF,KADjC,CACRE,KADQ;AAAA,MACDC,QADC,GACiCH,KADjC,CACDG,QADC;AAAA,MACSC,QADT,GACiCJ,KADjC,CACSI,QADT;AAAA,MACmBC,SADnB,GACiCL,KADjC,CACmBK,SADnB;;AAEzB,MAAMC,SAAS,sBAAWC,MAAX,CAAkB;AAC/BC;AACEC,eAAS,CADX;AAEEC,kBAAY,iBAAMC,IAFpB;AAGEC,kBAAY,sBAAWC,OAHzB;AAIEC,cAAQ,SAJV;AAKEC,iBAAW,MALb;AAMEC,eAAS,MANX;AAOEC,kBAAY,QAPd;AAQEC,cAAQ,MARV;AASEC,kBAAY,kBAAOC,eATrB;AAUEC,oBAAc,mBAAQC,MAVxB;AAWEpB,aAAOF,MAAME,KAXf;AAYEqB,2BAAmB,kBAAOC,IAA1B;AAZF,OAaK,2BAAW,MAAX,CAbL;AAcE,gBAAU;AACRC,iBAAS,mBAAQC;AADT;AAdZ,MAD+B;AAmB/BC,WAAM;AACJC,kBAAY,mBAAQN;AADhB,KAnByB;AAsB/BO;AACE3B,aAAOF,MAAMK;AADf,OAEK,2BAAW,MAAX,CAFL;AAtB+B,GAAlB,CAAf;;AA4BA,SACE;AAAA;AAAA,MAAQ,WAAW,oBAAIC,OAAOE,OAAX,CAAnB,EAAwC,UAAUR,MAAM8B,QAAN,IAAkB,KAApE;AACI1B,gBAAY,wCAAM,WAAc,oBAAIE,OAAOuB,IAAX,CAAd,2BAAoDzB,QAA1D,GADhB;AAEID,gBACA;AAAA;AAAA,QAAM,WAAW,oBAAIG,OAAOqB,KAAX,CAAjB;AAAsCxB;AAAtC;AAHJ,GADF;AAQD,CAtCD;;AAwCAJ,QAAQgC,YAAR,GAAuB;AACrB7B,SAAO,kBAAO8B,QADO;AAErB3B,aAAW,kBAAO2B,QAFG;AAGrB5B,YAAU;AAHW,CAAvB;;AAMAL,QAAQkC,SAAR,GAAoB;AAClB;AACA/B,SAAO,oBAAUgC,MAFC;AAGlB;AACA7B,aAAW,oBAAU6B,MAJH;AAKlB;AACA9B,YAAU,oBAAU8B;AANF,CAApB;;kBASenC,O","file":"NavIcon.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, css } from 'aphrodite';\nimport { colors, fonts, fontStyles, fontWeight, letterSpacing, opacity, spacing, timing } from 'common/styles/variables';\n\nconst NavIcon = (props) => {\n  const { content, color, children, iconName, iconColor } = props;\n  const styles = StyleSheet.create({\n    navIcon:{\n      padding: 0,\n      fontFamily: fonts.sans,\n      fontWeight: fontWeight.regular,\n      cursor: 'pointer',\n      textAlign: 'left',\n      display: 'flex',\n      alignItems: 'center',\n      border: 'none',\n      background: colors.baseTransparent,\n      marginBottom: spacing.space1,\n      color: props.color,\n      transition: `all ${timing.base} ease-in-out`,\n      ...fontStyles('14px'),\n      ':hover': {\n        opacity: opacity.hover,\n      }\n    },\n    label:{\n      marginLeft: spacing.space1,\n    },\n    icon:{\n      color: props.iconColor,\n      ...fontStyles('18px'),\n    }\n  });\n\n  return (\n    <button className={css(styles.navIcon)} disabled={props.disabled || false}>\n      { iconName && <span className={`${css(styles.icon)} icon icon-fw icon-${iconName}`}></span> }\n      { children &&\n        <span className={css(styles.label)}>{ children }</span>\n      }\n    </button>\n  )\n}\n\nNavIcon.defaultProps = {\n  color: colors.textBase,\n  iconColor: colors.textBase,\n  iconName: null,\n}\n\nNavIcon.propTypes = {\n  /** Color of text as per variables.js */\n  color: PropTypes.string,\n  /** Color of icon as per variables.js */\n  iconColor: PropTypes.string,\n  /** Icon name as per variables.js */\n  iconName: PropTypes.string,\n}\n\nexport default NavIcon;\n"]}