{"version":3,"sources":["../../../src/components/Compositions/CardHighlight.js"],"names":["createMarkup","content","__html","styles","container","base","display","width","space05","space4","col","flexDirection","row","wrapper","padding","space9","backgroundColor","bgWhite","figure","backgroundSize","backgroundPosition","margin","paddingBottom","order","paragraph","marginBottom","bgColor","white","color","textBase","blue","bgBlue","CardHighlight","title","url","imageUrl","meta","children","baseStyles","create","backgroundImage","defaultProps","propTypes","string","isRequired","bool"],"mappings":"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","file":"CardHighlight.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport { Copy, Heading, MoreLink } from \"components\";\nimport { fonts, fontStyles, fontWeight, colors, spacing, letterSpacing, opacity, media } from \"../../common/styles/variables\";\n\nconst createMarkup = (content) => ({ __html: `${content}` });\n\nconst styles = {\n  container: {\n    base:{\n      display: 'inline-block',\n      width: '100%',\n      display: 'flex',\n      borderRadius: spacing.space05,\n      overflow: 'hidden',\n      marginBottom: spacing.space4,\n    },\n    col:{\n      flexDirection: 'column'\n    },\n    row:{\n      flexDirection: 'row'\n    }\n  },\n  wrapper: {\n    base:{\n      padding: spacing.space9,\n      backgroundColor: colors.bgWhite,\n\n    },\n    col:{\n      width: '100%',\n    },\n    row:{\n      width: '50%',\n    }\n  },\n  figure:{\n    base:{\n      backgroundSize: 'cover',\n      backgroundPosition: 'center center',\n      margin: 0,\n    },\n    row:{\n      width: '50%',\n    },\n    col:{\n      width: '100%',\n      paddingBottom: '60%',\n      order: -1,\n    }\n  },\n  paragraph:{\n    marginBottom: spacing.space4,\n  },\n  bgColor: {\n    white: {\n      backgroundColor: colors.bgWhite,\n      color: colors.textBase,\n    },\n    blue: {\n      backgroundColor: colors.bgBlue,\n    },\n  },\n};\n\nconst CardHighlight = ({ bgColor, title, url, imageUrl, meta, paragraph, children, col }) => {\n\n  const baseStyles = StyleSheet.create({\n    container: {\n      ...styles.container.base,\n      ...(styles.container.row),\n      ...(col && styles.container.col),\n    },\n    wrapper: {\n      ...styles.wrapper.base,\n      ...(styles.wrapper.row),\n      ...(col && styles.wrapper.col),\n      ...(bgColor && styles.bgColor[bgColor]),\n    },\n    figure: {\n      ...styles.figure.base,\n      ...(styles.figure.row),\n      ...(col && styles.figure.col),\n    },\n    paragraph: {\n      ...styles.paragraph,\n    },\n  });\n\n  return (\n    <section className={css(baseStyles.container)}>\n      <div className={css(baseStyles.wrapper)}>\n        <header>\n          <Heading\n            level={3}\n            color={ bgColor === \"white\" ? \"blue\" : \"white\"}\n            size={\"large\"}\n            mb={ meta === true ? \"tiny\" : \"small\"}\n          >\n            {title}\n          </Heading>\n          {\n            meta && <Heading\n              level={6}\n              color={ bgColor === \"white\" ? \"blue\" : \"white\"}\n              size={\"tiny\"}\n              letterSpacing={\"small\"}\n              weight={\"medium\"}\n              tracking={\"small\"}\n              mb={\"small\"}\n            >\n              {meta}\n            </Heading>\n          }\n        </header>\n\n        <div className={css(baseStyles.paragraph)}>\n          <Copy\n            isParent\n            color={ bgColor === \"white\" ? null : \"white\"}\n          >\n            <p\n              className={css(baseStyles.paragraph)}\n              dangerouslySetInnerHTML={createMarkup(paragraph)}\n            />\n          </Copy>\n\n          { children }\n        </div>\n\n      </div>\n\n      <figure className={css(baseStyles.figure)} style={{backgroundImage:`url(${imageUrl})`}}></figure>\n\n    </section>\n  );\n}\n\nCardHighlight.defaultProps = {\n  title: null,\n  meta: null,\n  url: null,\n  col: null,\n  imageUrl: null,\n  paragraph: null,\n  bgColor: \"white\",\n};\n\nCardHighlight.propTypes = {\n  /** Background Color of Card */\n  bgColor: PropTypes.string.isRequired,\n  /** Title of Card */\n  title: PropTypes.string.isRequired,\n  /** Meta text of Card */\n  meta: PropTypes.string.isRequired,\n  /** URL of Card */\n  url: PropTypes.string.isRequired,\n  /** ImageURL of Card */\n  imageUrl: PropTypes.string,\n  /** Paragraph content of Card */\n  paragraph: PropTypes.string,\n  /** Is image and text below each other? */\n  col: PropTypes.bool.isRequired,\n};\n\nexport default CardHighlight;\n"]}