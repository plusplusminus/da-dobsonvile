{"version":3,"sources":["../../../src/components/Base/Heading.js"],"names":["styles","base","fontFamily","sans","lineHeight","margin","padding","size","tiny","small","medium","large","huge","mb","none","marginBottom","space0","space1","space2","space4","space6","space9","weight","light","fontWeight","regular","bold","color","textBase","blue","textBlue","red","textRed","textLight","white","textWhite","variant","uppercase","textTransform","truncate","overflow","textOverflow","whiteSpace","noWrap","left","textAlign","right","center","inline","display","tracking","letterSpacing","Heading","props","children","level","override","Component","style","temp","create","heading","reduce","result","item","defaultProps","propTypes","oneOf","node","isRequired","objectOf","oneOfType","string","number","object","bool"],"mappings":"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","file":"Heading.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { flatten } from 'rambda'\nimport { StyleSheet, css } from \"aphrodite\";\nimport { colors, fonts, fontWeight, fontStyles, letterSpacing, spacing } from \"common/styles/variables\";\n\nconst styles = {\n  base: {\n    fontFamily: fonts.sans,\n    lineHeight: 1,\n    margin: 0,\n    padding: 0,\n  },\n\n  size: {\n    tiny: {\n      ...fontStyles(\"13px\", `${13 * 1.5}px`),\n    },\n    small: {\n      ...fontStyles(\"16px\", `${16 * 1.5}px`),\n    },\n    medium: {\n      ...fontStyles(\"20px\", `${20 * 1.5}px`),\n    },\n    large: {\n      ...fontStyles(\"25px\", `${25 * 1.5}px`),\n    },\n    huge: {\n      ...fontStyles(\"49px\", `${49 * 1.5}px`),\n    },\n  },\n\n  mb: {\n    none: {\n      marginBottom: spacing.space0,\n    },\n    tiny: {\n      marginBottom: spacing.space1,\n    },\n    small: {\n      marginBottom: spacing.space2,\n    },\n    medium: {\n      marginBottom: spacing.space4,\n    },\n    large: {\n      marginBottom: spacing.space6,\n    },\n    huge: {\n      marginBottom: spacing.space9,\n    },\n  },\n\n  weight: {\n    light: {\n      fontWeight: fontWeight.light,\n    },\n    regular: {\n      fontWeight: fontWeight.regular,\n    },\n    medium: {\n      fontWeight: fontWeight.medium,\n    },\n    bold: {\n      fontWeight: fontWeight.bold,\n    },\n  },\n\n  color: {\n    base: {\n      color: colors.textBase,\n    },\n    blue: {\n      color: colors.textBlue,\n    },\n    red: {\n      color: colors.textRed,\n    },\n    light: {\n      color: colors.textLight,\n    },\n    white: {\n      color: colors.textWhite,\n    },\n  },\n\n  variant: {\n    uppercase: {\n      textTransform: \"uppercase\",\n    },\n    truncate: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n    noWrap: {\n      whiteSpace: \"nowrap\",\n    },\n    left: {\n      textAlign: \"left\",\n    },\n    right: {\n      textAlign: \"right\",\n    },\n    center: {\n      textAlign: \"center\",\n    },\n    inline: {\n      display: \"inline-block\",\n    },\n  },\n\n  tracking: {\n    none: {\n      letterSpacing: letterSpacing.none,\n    },\n    small: {\n      letterSpacing: letterSpacing.small,\n    },\n    base: {\n      letterSpacing: letterSpacing.base,\n    },\n    large: {\n      letterSpacing: letterSpacing.large,\n    },\n    huge: {\n      letterSpacing: letterSpacing.huge,\n    },\n  },\n};\n\nconst Heading = (props) => {\n\n  const { color, children, inline, level, tracking, mb, override, size, truncate, noWrap, uppercase, left, right, center, weight } = props;\n\n  const Component = level !== 'text' ? `h${level}` : level;\n\n  const style = [\n    styles.base,\n    size && styles.size[size],\n    mb && styles.mb[mb],\n    weight && styles.weight[weight],\n    color && styles.color[color],\n    tracking && styles.tracking[tracking],\n    truncate && styles.variant.truncate,\n    noWrap && styles.variant.noWrap,\n    uppercase && styles.variant.uppercase,\n    left && styles.variant.left,\n    right && styles.variant.right,\n    center && styles.variant.center,\n    inline && styles.variant.inline,\n    override && override,\n  ];\n\n  const temp = StyleSheet.create({\n    heading: style.reduce((result, item) => {\n      if (item) {\n        return {\n          ...result,\n          ...item,\n        };\n      }\n      return result;\n    }, {}),\n  });\n\n  return (\n    <Component\n      className={css(temp.heading)}\n    >\n      {children}\n    </Component>\n  );\n}\n\nHeading.defaultProps = {\n  color: \"base\",\n  level: 2,\n  tracking: \"small\",\n  mb: \"none\",\n  override: {},\n  size: \"medium\",\n  truncate: false,\n  noWrap: false,\n  uppercase: false,\n  left: true,\n  right: false,\n  center: false,\n  inline: false,\n  weight: \"bold\",\n};\n\n\nHeading.propTypes = {\n  /** The heading color*/\n  color: PropTypes.oneOf([\n    \"base\",\n    \"blue\",\n    \"red\",\n    \"white\",\n    \"light\",\n  ]),\n  /** Text for the heading */\n  children: PropTypes.node.isRequired,\n  /** Creates the heading HTML element */\n  level: PropTypes.oneOf([\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    'text',\n  ]).isRequired,\n  /** Controls the letter spacing */\n  tracking: PropTypes.oneOf([\n    \"none\",\n    \"small\",\n    \"base\",\n    \"large\",\n    \"huge\",\n  ]),\n  /** Margin bottom  */\n  mb: PropTypes.oneOf([\n    \"none\",\n    \"tiny\",\n    \"small\",\n    \"medium\",\n    \"large\",\n  ]),\n  /** Override styles */\n  override: PropTypes.objectOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.object,\n    ]),\n  ),\n  /** Declares the font size of the heading */\n  size: PropTypes.oneOf([\n    \"huge\",\n    \"large\",\n    \"medium\",\n    \"small\",\n    \"tiny\",\n  ]).isRequired,\n  /** Whether or not to hide the text overflow with an ellipsis */\n  truncate: PropTypes.bool,\n  /** Whether or not to prevent the text from wrapping */\n  noWrap: PropTypes.bool,\n  /** Whether or not to set the heading in all caps */\n  uppercase: PropTypes.bool,\n  /** Whether or not to align left */\n  left: PropTypes.bool,\n  /** Whether or not to align right */\n  right: PropTypes.bool,\n  /** Whether or not to align center */\n  center: PropTypes.bool,\n  /** Whether or not to apply inline-block display property */\n  inline: PropTypes.bool,\n  /** Adjusts the font weight of the heading */\n  weight: PropTypes.oneOf([\n    \"bold\",\n    \"medium\",\n    \"regular\",\n    \"light\",\n  ]),\n};\n\nHeading.styles = styles;\n\nexport default Heading;\n"]}