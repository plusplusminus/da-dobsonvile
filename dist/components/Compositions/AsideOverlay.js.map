{"version":3,"sources":["../../../src/components/Compositions/AsideOverlay.js"],"names":["styles","asideOverlay","base","borderRadius","space1","marginBottom","space4","backgroundSize","backgroundPosition","bg","paddingTop","space9","paddingRight","space2","paddingBottom","paddingLeft","display","alignItems","flexDirection","mb","none","space0","small","large","color","dark","imageUrl","backgroundColor","bgDarkO","bgDark","blue","brandBlue","green","brandGreen","red","brandRed","yellow","brandYellow","AsideOverlay","props","title","paragraph","cta","baseStyles","create","backgroundImage","defaultProps","propTypes","string","oneOf"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS;AACbC,gBAAc;AACZC,UAAM;AACJC,oBAAc,mBAAQC,MADlB;AAEJC,oBAAc,mBAAQC,MAFlB;AAGJC,sBAAgB,OAHZ;AAIJC,0BAAoB;AAJhB;AADM,GADD;AASbC,MAAI;AACFN,kBAAc,mBAAQC,MADpB;AAEFM,gBAAY,mBAAQC,MAFlB;AAGFC,kBAAc,mBAAQC,MAHpB;AAIFC,mBAAe,mBAAQH,MAJrB;AAKFI,iBAAa,mBAAQF,MALnB;AAMFG,aAAS,MANP;AAOFC,gBAAY,QAPV;AAQFC,mBAAe;AARb,GATS;AAmBbC,MAAI;AACFC,UAAM;AACJf,oBAAc,mBAAQgB;AADlB,KADJ;AAIFC,WAAO;AACLjB,oBAAc,mBAAQC;AADjB,KAJL;AAOFiB,WAAO;AACLlB,oBAAc,mBAAQM;AADjB;AAPL,GAnBS;AA8Bba,SAAO;AACLC,UAAM;AACJC,gBAAS;AACPC,yBAAiB,kBAAOC;AADjB,OADL;AAIJ1B,YAAK;AACHyB,yBAAiB,kBAAOE;AADrB;AAJD,KADD;AASLC,UAAM;AACJJ,gBAAS;AACPC,yBAAiB,mBAAK,kBAAOI,SAAZ,EAAuB,GAAvB;AADV,OADL;AAIJ7B,YAAK;AACHyB,yBAAiB,mBAAK,kBAAOI,SAAZ,EAAuB,CAAvB;AADd;AAJD,KATD;AAiBLC,WAAO;AACLN,gBAAS;AACPC,yBAAiB,mBAAK,kBAAOM,UAAZ,EAAwB,GAAxB;AADV,OADJ;AAIL/B,YAAK;AACHyB,yBAAiB,mBAAK,kBAAOM,UAAZ,EAAwB,CAAxB;AADd;AAJA,KAjBF;AAyBLC,SAAK;AACHR,gBAAS;AACPC,yBAAiB,mBAAK,kBAAOQ,QAAZ,EAAsB,GAAtB;AADV,OADN;AAIHjC,YAAK;AACHyB,yBAAiB,mBAAK,kBAAOQ,QAAZ,EAAsB,CAAtB;AADd;AAJF,KAzBA;AAiCLC,YAAQ;AACNV,gBAAS;AACPC,yBAAiB,mBAAK,kBAAOU,WAAZ,EAAyB,GAAzB;AADV,OADH;AAINnC,YAAK;AACHyB,yBAAiB,mBAAK,kBAAOU,WAAZ,EAAyB,CAAzB;AADd;AAJC;AAjCH;AA9BM,CAAf;;AA0EA,IAAMC,eAAe,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,MAEtBC,KAFsB,GAEyBD,KAFzB,CAEtBC,KAFsB;AAAA,MAEfhB,KAFe,GAEyBe,KAFzB,CAEff,KAFe;AAAA,MAERiB,SAFQ,GAEyBF,KAFzB,CAERE,SAFQ;AAAA,MAEGC,GAFH,GAEyBH,KAFzB,CAEGG,GAFH;AAAA,MAEQvB,EAFR,GAEyBoB,KAFzB,CAEQpB,EAFR;AAAA,MAEYO,QAFZ,GAEyBa,KAFzB,CAEYb,QAFZ;;;AAI9B,MAAMiB,aAAa,sBAAWC,MAAX,CAAkB;AACnC3C,+BACKD,OAAOC,YAAP,CAAoBC,IADzB,EAEMiB,MAAMnB,OAAOmB,EAAP,CAAUA,EAAV,CAFZ,CADmC;AAKnCV,qBACKT,OAAOS,EADZ,EAEMiB,YAAYF,KAAZ,IAAqBxB,OAAOwB,KAAP,CAAaA,KAAb,EAAoBE,QAF/C,EAGM,CAACA,QAAD,IAAaF,KAAb,IAAsBxB,OAAOwB,KAAP,CAAaA,KAAb,EAAoBtB,IAHhD;AALmC,GAAlB,CAAnB;;AAYA,SACE;AAAA;AAAA,MAAO,WAAW,oBAAIyC,WAAW1C,YAAf,CAAlB,EAAgD,OAAO,EAAC4C,0BAAuBnB,QAAvB,MAAD,EAAvD;AACE;AAAA;AAAA,QAAK,WAAW,oBAAIiB,WAAWlC,EAAf,CAAhB;AACE+B,eACE;AAAA;AAAA;AACE,iBAAO,OADT;AAEE,gBAAM,OAFR;AAGE,cAAI,OAHN;AAIE;AAJF;AAMIA;AANJ,OAFJ;AAYIC,mBACA;AAAA;AAAA;AACE,iBAAO,OADT;AAEE,kBAAQ,MAFV;AAGE,cAAI,OAHN;AAIE;AAJF;AAMIA;AANJ,OAbJ;AAuBIC,aACA;AAAA;AAAA;AACE,iBAAM,OADR;AAEE;AAFF;AAIIA;AAJJ;AAxBJ;AADF,GADF;AAoCD,CApDD;;AAsDAJ,aAAaQ,YAAb,GAA4B;AAC1BtB,SAAO,MADmB;AAE1BL,MAAI,OAFsB;AAG1BuB,OAAK,UAHqB;AAI1BD,aAAW,yCAJe;AAK1BD,SAAO;AALmB,CAA5B;;AAQAF,aAAaS,SAAb;AACE;AACAL,OAAK,oBAAUM,MAFjB;AAGE;AACAP,aAAW,oBAAUO,MAJvB;AAKE;AACAR,SAAO,oBAAUQ;AANnB,mDAOS,oBAAUA,MAPnB,mDASS,oBAAUC,KAAV,CAAgB,CACrB,MADqB,EAErB,MAFqB,EAGrB,KAHqB,EAIrB,OAJqB,EAKrB,QALqB,CAAhB,CATT,gDAiBM,oBAAUA,KAAV,CAAgB,CAClB,MADkB,EAElB,OAFkB,EAGlB,OAHkB,CAAhB,CAjBN;;kBAwBeX,Y","file":"AsideOverlay.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, css } from 'aphrodite';\nimport { Button, Copy, Heading } from 'components';\nimport { colors, fontWeight, spacing } from 'common/styles/variables';\nimport {default as ButtonTest} from 'components/Button'\nimport {rgba} from '../../utils/helpers'\n\nconst styles = {\n  asideOverlay: {\n    base: {\n      borderRadius: spacing.space1,\n      marginBottom: spacing.space4,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center center',\n    },\n  },\n  bg: {\n    borderRadius: spacing.space1,\n    paddingTop: spacing.space9,\n    paddingRight: spacing.space2,\n    paddingBottom: spacing.space9,\n    paddingLeft: spacing.space2,\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  mb: {\n    none: {\n      marginBottom: spacing.space0,\n    },\n    small: {\n      marginBottom: spacing.space4,\n    },\n    large: {\n      marginBottom: spacing.space9,\n    },\n  },\n  color: {\n    dark: {\n      imageUrl:{\n        backgroundColor: colors.bgDarkO,\n      },\n      base:{\n        backgroundColor: colors.bgDark,\n      }\n    },\n    blue: {\n      imageUrl:{\n        backgroundColor: rgba(colors.brandBlue, 0.9),\n      },\n      base:{\n        backgroundColor: rgba(colors.brandBlue, 1),\n      }\n    },\n    green: {\n      imageUrl:{\n        backgroundColor: rgba(colors.brandGreen, 0.9),\n      },\n      base:{\n        backgroundColor: rgba(colors.brandGreen, 1),\n      }\n    },\n    red: {\n      imageUrl:{\n        backgroundColor: rgba(colors.brandRed, 0.9),\n      },\n      base:{\n        backgroundColor: rgba(colors.brandRed, 1),\n      }\n    },\n    yellow: {\n      imageUrl:{\n        backgroundColor: rgba(colors.brandYellow, 0.9),\n      },\n      base:{\n        backgroundColor: rgba(colors.brandYellow, 1),\n      }\n    },\n  },\n};\n\nconst AsideOverlay = (props) => {\n\n  const { title, color, paragraph, cta, mb, imageUrl } = props;\n\n  const baseStyles = StyleSheet.create({\n    asideOverlay: {\n      ...styles.asideOverlay.base,\n      ...(mb && styles.mb[mb]),\n    },\n    bg: {\n      ...styles.bg,\n      ...(imageUrl && color && styles.color[color].imageUrl),\n      ...(!imageUrl && color && styles.color[color].base),\n    }\n  });\n\n  return (\n    <aside className={css(baseStyles.asideOverlay)} style={{backgroundImage:`url(${imageUrl})`}}>\n      <div className={css(baseStyles.bg)}>\n      { title &&\n          <Heading\n            color={\"white\"}\n            size={\"large\"}\n            mb={\"small\"}\n            center\n          >\n            { title }\n          </Heading>\n        }\n\n        { paragraph &&\n          <Copy\n            color={\"white\"}\n            weight={\"bold\"}\n            mb={\"large\"}\n            center\n          >\n            { paragraph }\n          </Copy>\n        }\n\n        { cta &&\n          <ButtonTest\n            color=\"white\"\n            center\n          >\n            { cta }\n          </ButtonTest>\n        }\n      </div>\n    </aside>\n  )\n}\n\nAsideOverlay.defaultProps = {\n  color: \"dark\",\n  mb: 'small',\n  cta: 'View All',\n  paragraph: 'Find out more about DAs delivery record',\n  title: 'Heading',\n}\n\nAsideOverlay.propTypes = {\n  /** Button label */\n  cta: PropTypes.string,\n  /** Paragraph appearing below Title */\n  paragraph: PropTypes.string,\n  /** Title of Overlay */\n  title: PropTypes.string,\n  title: PropTypes.string,\n  /** Background Color of Overlay Component */\n  color: PropTypes.oneOf([\n    \"dark\",\n    \"blue\",\n    \"red\",\n    \"green\",\n    \"yellow\",\n  ]),\n  /** Margin Below Overlay */\n  mb: PropTypes.oneOf([\n    \"none\",\n    \"small\",\n    \"large\",\n  ]),\n}\n\nexport default AsideOverlay;\n"]}