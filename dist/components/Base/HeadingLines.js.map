{"version":3,"sources":["../../../src/components/Base/HeadingLines.js"],"names":["styles","container","base","position","display","alignItems","mb","none","marginBottom","space0","tiny","space1","small","space2","medium","space4","large","space6","huge","space9","lines","line","width","space10","content","height","top","color","backgroundColor","textBase","blue","textBlue","red","textRed","white","textWhite","HeadingLines","props","children","lineLeft","lineRight","baseStyles","create","right","left","defaultProps","propTypes","node","isRequired","oneOf","bool"],"mappings":"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","file":"HeadingLines.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, css } from 'aphrodite';\nimport { colors, fonts, fontStyles, icons, spacing } from 'common/styles/variables';\n\n\nconst styles = {\n  container:{\n    base: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n    },\n    mb: {\n      none: {\n        marginBottom: spacing.space0,\n      },\n      tiny: {\n        marginBottom: spacing.space1,\n      },\n      small: {\n        marginBottom: spacing.space2,\n      },\n      medium: {\n        marginBottom: spacing.space4,\n      },\n      large: {\n        marginBottom: spacing.space6,\n      },\n      huge: {\n        marginBottom: spacing.space9,\n      },\n    },\n  },\n\n  lines:{\n    base:{\n      position: 'relative',\n    },\n    line:{\n      width: spacing.space10,\n      content:'\"\"',\n      height:'1px',\n      position: 'absolute',\n      top: '50%',\n    },\n    color: {\n      base: {\n        backgroundColor: colors.textBase,\n      },\n      blue: {\n        backgroundColor: colors.textBlue,\n      },\n      red: {\n        backgroundColor: colors.textRed,\n      },\n      white: {\n        backgroundColor: colors.textWhite,\n      },\n    },\n   },\n  }\n\n\nconst HeadingLines = (props) => {\n\n  const { children, lines, lineLeft, container, lineRight, color, mb } = props;\n\n  const baseStyles = StyleSheet.create({\n    container:{\n      ...styles.container.base,\n      ...(mb && styles.container.mb[mb]),\n    },\n    lineLeft:{\n      ...styles.lines.base,\n      ...(lineLeft && styles.lines.lineLeft),\n      ':before': {\n        ...styles.lines.line,\n        ...(color && styles.lines.color[color]),\n        right: spacing.space4,\n      }\n    },\n    lineRight:{\n      ...styles.lines.base,\n      ...(lineRight && styles.lines.lineRight),\n      ':after': {\n        ...styles.lines.line,\n        ...(color && styles.lines.color[color]),\n        left: spacing.space4,\n      }\n    },\n  });\n\n  return (\n    <span className={css(baseStyles.container)}>\n      { lineLeft && <span className={css(baseStyles.lineLeft)}></span> }\n        { children }\n      { lineRight && <span className={css(baseStyles.lineRight)}></span> }\n    </span>\n  )\n}\n\nHeadingLines.defaultProps = {\n  children: null,\n  color: 'base',\n  lineLeft: false,\n  lineRight: false,\n  mb: 'none',\n};\n\nHeadingLines.propTypes = {\n  /** Children getting wraped by lines */\n  children: PropTypes.node.isRequired,\n  /** Color of lines - mimic color of Heading Component */\n  color: PropTypes.oneOf([\n    \"blue\",\n    \"red\",\n    \"green\",\n    \"yellow\",\n    \"white\",\n  ]),\n  /** Add right line */\n  lineLeft: PropTypes.bool,\n  /** Add left line */\n  lineRight: PropTypes.bool,\n  /** Margin bottom of container - mimic mb of Heading Component */\n  mb: PropTypes.oneOf([\n    \"none\",\n    \"tiny\",\n    \"small\",\n    \"medium\",\n    \"large\",\n  ]),\n};\n\nexport default HeadingLines;\n"]}