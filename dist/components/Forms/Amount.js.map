{"version":3,"sources":["../../../src/components/Forms/Amount.js"],"names":["Amount","props","toggleItem","setState","selected","state","styles","create","wrapper","borderRadius","space05","overflow","boxShadow","items","map","item","index","borderWidth","backgroundColor","brandBlue","brandWhite","color","label","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;;;;;;;IAGMA,M;;;AAEJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,gHACXA,KADW;;AAAA,UAOnBC,UAPmB,GAON,YAAM;AACjB,YAAKC,QAAL,CAAc;AACZC,kBAAU,CAAC,MAAKC,KAAL,CAAWD;AADV,OAAd;AAGD,KAXkB;;AAEjB,UAAKC,KAAL,GAAa;AACXD,gBAAS;AADE,KAAb;AAFiB;AAKlB;;;;6BAQQ;AAAA;;AAEP,UAAME,SAAS,sBAAWC,MAAX,CAAkB;AAC/BC,iBAAS;AACPC,wBAAc,mBAAQC,OADf;AAEPC,oBAAU,QAFH;AAGPC,qBAAU;AAHH;AADsB,OAAlB,CAAf;;AAQA,aACE;AAAA;AAAA,UAAK,WAAW,oBAAIN,OAAOE,OAAX,CAAhB;AACE;AAAA;AAAA,YAAK,WAAW,gBAAhB;AAEI,eAAKP,KAAL,CAAWY,KAAX,CAAiBC,GAAjB,CAAqB,UAACC,IAAD,EAAMC,KAAN;AAAA,mBACnB;AAAA;AAAA,gBAAK,WAAU,KAAf,EAAqB,KAAKA,KAA1B;AACE;AAAA;AAAA;AACE,4BADF;AAEE,2BAAS,KAFX;AAGE,gCAAc;AACZC,iCAAY,KADA;AAEZL,+BAAU,mBAFE;AAGZM,qCAAiB,OAAKb,KAAL,CAAWD,QAAX,GAAsB,kBAAOe,SAA7B,GAAyC,kBAAOC,UAHrD;AAIZC,2BAAO,OAAKhB,KAAL,CAAWD,QAAX,GAAsB,kBAAOgB,UAA7B,GAA0C,kBAAOD;AAJ5C,mBAHhB;AASE,2BAAS;AAAA,2BAAI,OAAKjB,UAAL,EAAJ;AAAA;AATX;AAWGa,qBAAKO;AAXR;AADF,aADmB;AAAA,WAArB;AAFJ;AADF,OADF;AAyBD;;;;;;AACF;;AAEDtB,OAAOuB,YAAP,GAAsB;AACpBV,SAAO;AADa,CAAtB;;kBAIeb,M","file":"Amount.js","sourcesContent":["import React, { Component } from 'react';\nimport { colors, spacing } from \"../../common/styles/variables\";\nimport { ButtonTest, Label } from \"components\";\nimport { StyleSheet, css } from 'aphrodite';\n\n\nclass Amount extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected:false\n    }\n  }\n\n  toggleItem = () => {\n    this.setState({\n      selected: !this.state.selected\n    })\n  }\n\n  render() {\n\n    const styles = StyleSheet.create({\n      wrapper: {\n        borderRadius: spacing.space05,\n        overflow: 'hidden',\n        boxShadow:'0 0 0 1px #ebebeb',\n      },\n    });\n\n    return(\n      <div className={css(styles.wrapper)}>\n        <div className={\"row no-gutters\"}>\n          {\n            this.props.items.map((item,index) =>\n              <div className=\"col\" key={index}>\n                <ButtonTest\n                  full\n                  rounded={false}\n                  customStyles={{\n                    borderWidth:\"0px\",\n                    boxShadow:'0 0 0 1px #ebebeb',\n                    backgroundColor: this.state.selected ? colors.brandBlue : colors.brandWhite,\n                    color: this.state.selected ? colors.brandWhite : colors.brandBlue,\n                  }}\n                  onClick={()=>this.toggleItem()}\n                >\n                  {item.label}\n                </ButtonTest>\n              </div>\n            )\n          }\n        </div>\n      </div>\n    )\n  }\n};\n\nAmount.defaultProps = {\n  items: [],\n}\n\nexport default Amount;\n"]}