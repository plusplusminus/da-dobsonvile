{"version":3,"sources":["../../../src/components/Base/Image.js"],"names":["styles","image","margin","padding","maxWidth","height","display","flex","fixed","rounded","borderRadius","space05","Image","props","imageUrl","alt","baseStyles","create","defaultProps","propTypes","string","isRequired","bool"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,SAAS;AACbC,SAAO;AACLC,YAAQ,CADH;AAELC,aAAS,CAFJ;AAGLC,cAAU,MAHL;AAILC,YAAQ,MAJH;AAKLC,aAAS,OALJ;AAMLC,UAAK;AANA,GADM;AASbC,SAAO;AACLF,aAAS;AADJ,GATM;AAYbG,WAAS;AACPC,kBAAc,mBAAQC;AADf;AAZI,CAAf;;AAiBA,IAAMC,QAAQ,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,MAEfC,QAFe,GAEmBD,KAFnB,CAEfC,QAFe;AAAA,MAELC,GAFK,GAEmBF,KAFnB,CAELE,GAFK;AAAA,MAEAP,KAFA,GAEmBK,KAFnB,CAEAL,KAFA;AAAA,MAEOC,OAFP,GAEmBI,KAFnB,CAEOJ,OAFP;;;AAIvB,MAAMO,aAAa,sBAAWC,MAAX,CAAkB;AACnChB,wBACKD,OAAOC,KADZ,EAEMO,SAASR,OAAOQ,KAFtB,EAGMC,WAAWT,OAAOS,OAHxB;AADmC,GAAlB,CAAnB;;AAQA,SACE,uCAAK,KAAKK,QAAV,EAAoB,KAAKC,GAAzB,EAA8B,WAAW,oBAAIC,WAAWf,KAAf,CAAzC,GADF;AAGD,CAfD;;AAiBAW,MAAMM,YAAN,GAAqB;AACnBJ,+BADmB;AAEnBC,OAAK,kBAFc;AAGnBP,SAAO,KAHY;AAInBC,WAAS;AAJU,CAArB;;AAOAG,MAAMO,SAAN,GAAkB;AAChB;AACAJ,OAAK,oBAAUK,MAAV,CAAiBC,UAFN;AAGhB;AACAP,YAAU,oBAAUM,MAAV,CAAiBC,UAJX;AAKhB;AACAb,SAAO,oBAAUc,IAAV,CAAeD,UANN;AAOhB;AACAZ,WAAS,oBAAUa,IAAV,CAAeD;AARR,CAAlB;;AAWAT,MAAMZ,MAAN,GAAeA,MAAf;;kBAEeY,K","file":"Image.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { dobsonville } from 'common/images';\nimport { StyleSheet, css } from 'aphrodite';\nimport { spacing } from \"common/styles/variables\";\n\nconst styles = {\n  image: {\n    margin: 0,\n    padding: 0,\n    maxWidth: '100%',\n    height: 'auto',\n    display: 'block',\n    flex:'none',\n  },\n  fixed: {\n    display: 'inline-block',\n  },\n  rounded: {\n    borderRadius: spacing.space05,\n  }\n};\n\nconst Image = (props) => {\n\n  const { imageUrl, alt, fixed, rounded } = props;\n\n  const baseStyles = StyleSheet.create({\n    image:{\n      ...styles.image,\n      ...(fixed && styles.fixed),\n      ...(rounded && styles.rounded),\n    }\n  });\n\n  return (\n    <img src={imageUrl} alt={alt} className={css(baseStyles.image)}/>\n  );\n}\n\nImage.defaultProps = {\n  imageUrl: dobsonville,\n  alt: 'alt text missing',\n  fixed: false,\n  rounded: false,\n}\n\nImage.propTypes = {\n  /** Alt text for the image */\n  alt: PropTypes.string.isRequired,\n  /** Image src */\n  imageUrl: PropTypes.string.isRequired,\n  /** Is this image not fluid */\n  fixed: PropTypes.bool.isRequired,\n  /** Does the image have rounded corners */\n  rounded: PropTypes.bool.isRequired,\n};\n\nImage.styles = styles;\n\nexport default Image;\n"]}