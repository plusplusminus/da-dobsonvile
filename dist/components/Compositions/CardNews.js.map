{"version":3,"sources":["../../../src/components/Compositions/CardNews.js"],"names":["createMarkup","content","__html","styles","container","display","marginBottom","space4","header","figure","margin","CardNews","featured","title","url","imageUrl","meta","paragraph","visual","baseStyles","create","propTypes","string","isRequired","bool","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,eAAe,SAAfA,YAAe,CAACC,OAAD;AAAA,SAAc,EAAEC,aAAWD,OAAb,EAAd;AAAA,CAArB;;AAEA,IAAME,SAAS;AACbC,aAAW;AACTC,aAAS,cADA;AAETC,kBAAc,mBAAQC;AAFb,GADE;AAKbC,UAAQ,EALK;AAMbC,UAAQ;AACNC,YAAQ;AADF;AANK,CAAf;;AAWA,IAAMC,WAAW,SAAXA,QAAW,OAAiE;AAAA,MAA9DC,QAA8D,QAA9DA,QAA8D;AAAA,MAApDC,KAAoD,QAApDA,KAAoD;AAAA,MAA7CC,GAA6C,QAA7CA,GAA6C;AAAA,MAAxCC,QAAwC,QAAxCA,QAAwC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;;AAEhF,MAAMC,aAAa,sBAAWC,MAAX,CAAkB;AACnChB,4BACKD,OAAOC,SADZ,CADmC;AAInCK,yBACKN,OAAOM,MADZ;AAJmC,GAAlB,CAAnB;;AASA,SACE;AAAA;AAAA,MAAS,WAAW,oBAAIU,WAAWf,SAAf,CAApB;AACE;AAAA;AAAA,QAAK,WAAU,KAAf;AAEIW,kBACA;AAAA;AAAA,UAAK,WAAU,UAAf;AACE;AAAA;AAAA,YAAQ,WAAW,oBAAII,WAAWV,MAAf,CAAnB;AACE,iDAAK,KAAKM,QAAV,EAAoB,KAAI,EAAxB,EAA2B,WAAU,WAArC;AADF;AADF,OAHJ;AAUE;AAAA;AAAA,UAAK,YAAcA,YAAY,UAA1B,WAAwC,CAACA,QAAD,IAAa,WAArD,CAAL;AACE;AAAA;AAAA,YAAQ,WAAW,oBAAII,WAAWX,MAAf,CAAnB;AACE;AAAA;AAAA;AACE,qBAAO,CADT;AAEE,0BAASI,YAAY,IAAZ,GAAmB,QAAnB,GAA8B,OAAvC,CAFF;AAGE,kBAAI,MAHN;AAIE,wBAAU;AAJZ;AAMGC;AANH,WADF;AAUIG,kBAAQ;AAAA;AAAA;AACN,qBAAO,CADD;AAEN,oBAAM,MAFA;AAGN,wBAAU,MAHJ;AAIN,sBAAQ,OAJF;AAKN;AALM;AAOLA;AAPK;AAVZ;AADF;AAVF;AADF,GADF;AAuCD,CAlDD;;AAoDAL,SAASU,SAAT,GAAqB;AACnB;AACAR,SAAO,oBAAUS,MAAV,CAAiBC,UAFL;AAGnB;AACAP,QAAM,oBAAUM,MAAV,CAAiBC,UAJJ;AAKnB;AACAT,OAAK,oBAAUQ,MAAV,CAAiBC,UANH;AAOnB;AACAR,YAAU,oBAAUO,MARD;AASnB;AACAL,aAAW,oBAAUK,MAVF;AAWnBV,YAAU,oBAAUY;AAXD,CAArB;;AAcAb,SAASc,YAAT,GAAwB;AACtBZ,SAAO,IADe;AAEtBG,QAAM,IAFgB;AAGtBF,OAAK,IAHiB;AAItBC,YAAU,IAJY;AAKtBE,aAAW,IALW;AAMtBL,YAAU;AANY,CAAxB;;kBASeD,Q","file":"CardNews.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport { Copy, Heading, MoreLink } from \"components\";\nimport { fonts, fontStyles, fontWeight, colors, spacing, letterSpacing, opacity, media } from \"../../common/styles/variables\";\n\nconst createMarkup = (content) => ({ __html: `${content}` });\n\nconst styles = {\n  container: {\n    display: \"inline-block\",\n    marginBottom: spacing.space4,\n  },\n  header: {},\n  figure: {\n    margin: 0,\n  },\n};\n\nconst CardNews = ({ featured, title, url, imageUrl, meta, paragraph, visual }) => {\n\n  const baseStyles = StyleSheet.create({\n    container: {\n      ...styles.container,\n    },\n    figure: {\n      ...styles.figure,\n    },\n  });\n\n  return (\n    <article className={css(baseStyles.container)}>\n      <div className=\"row\">\n\n        { imageUrl &&\n          <div className=\"col-md-6\">\n            <figure className={css(baseStyles.figure)}>\n              <img src={imageUrl} alt=\"\" className=\"img-fluid\" />\n            </figure>\n          </div>\n        }\n\n        <div className={`${imageUrl && \"col-md-6\"} ${!imageUrl && \"col-md-12\"}`}>\n          <header className={css(baseStyles.header)}>\n            <Heading\n              level={3}\n              size={`${featured == true ? \"medium\" : \"small\"}`}\n              mb={\"tiny\"}\n              tracking={\"none\"}\n            >\n              {title}\n            </Heading>\n            {\n              meta && <Heading\n                level={6}\n                size={\"tiny\"}\n                tracking={\"none\"}\n                weight={\"light\"}\n                uppercase\n              >\n                {meta}\n              </Heading>\n            }\n          </header>\n        </div>\n\n      </div>\n    </article>\n  );\n}\n\nCardNews.propTypes = {\n  /** Title of Card */\n  title: PropTypes.string.isRequired,\n  /** Meta text of Card */\n  meta: PropTypes.string.isRequired,\n  /** URL of Card */\n  url: PropTypes.string.isRequired,\n  /** ImageURL of Card */\n  imageUrl: PropTypes.string,\n  /** Paragraph content of Card */\n  paragraph: PropTypes.string,\n  featured: PropTypes.bool,\n};\n\nCardNews.defaultProps = {\n  title: null,\n  meta: null,\n  url: null,\n  imageUrl: null,\n  paragraph: null,\n  featured: false,\n};\n\nexport default CardNews;\n"]}