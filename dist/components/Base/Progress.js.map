{"version":3,"sources":["../../../src/components/Base/Progress.js"],"names":["styles","progress","base","fontFamily","sans","display","width","color","textLightO","marginBottom","space2","bg","borderColor","bgLightO","borderRadius","space3","overflow","clear","backgroundColor","bgLight","fill","height","label","paddingTop","paddingRight","space1","paddingBottom","paddingLeft","status","neutral","statusNeutral","border","info","statusInfo","success","statusSuccess","warning","statusWarning","danger","statusDanger","Progress","showProgress","labelTop","labelBottom","baseStyles","create","bgFilter","defaultProps","propTypes","oneOf","isRequired","number","bool","string"],"mappings":"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","file":"Progress.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, css } from 'aphrodite';\nimport { Copy } from 'components';\nimport { fonts, fontStyles, fontWeight, letterSpacing, colors, spacing } from 'common/styles/variables';\n\nconst styles = {\n  progress:{\n    base:{\n      fontFamily: fonts.sans,\n      display: 'inline-block',\n      width: '100%',\n      color: colors.textLightO,\n      marginBottom: spacing.space2,\n    }\n  },\n  bg:{\n    base:{\n      borderColor: colors.bgLightO,\n      borderRadius: spacing.space3,\n      overflow: 'hidden',\n      clear: 'both',\n      backgroundColor: colors.bgLight,\n    }\n  },\n  fill:{\n    base:{\n      height: spacing.space3,\n      borderRadius: spacing.space3,\n    }\n  },\n  label:{\n    base:{\n      ...fontStyles('13px','14px'),\n      display: 'block',\n      paddingTop: '5px',\n      paddingRight: spacing.space1,\n      paddingBottom: '5px',\n      paddingLeft: spacing.space1,\n      color: colors.textLightO,\n    }\n  },\n  status: {\n    neutral: {\n      bg:{backgroundColor: colors.statusNeutral},\n      border:{borderColor: colors.statusNeutral}\n    },\n    info: {\n      bg:{backgroundColor: colors.statusInfo},\n      border:{borderColor: colors.statusInfo}\n    },\n    success: {\n      bg:{backgroundColor: colors.statusSuccess},\n      border:{borderColor: colors.statusSuccess}\n    },\n    warning: {\n      bg:{backgroundColor: colors.statusWarning},\n      border:{borderColor: colors.statusWarning}\n    },\n    danger: {\n      bg:{backgroundColor: colors.statusDanger},\n      border:{borderColor: colors.statusDanger}\n    },\n  },\n};\n\nconst Progress = ({ status,progress,showProgress,labelTop,labelBottom }) => {\n\n  const baseStyles = StyleSheet.create({\n    progress:{\n      ...styles.progress.base,\n    },\n    bg:{\n      ...styles.bg.base,\n    },\n    fill:{\n      ...styles.fill.base,\n      ...(status && styles.status[status].bg),\n      ...(status && styles.status[status].border),\n      width: '' + progress + '%',\n    },\n    label:{\n      ...styles.label.base,\n    }\n  });\n\n  return (\n    <div>\n      { labelTop &&\n        <Copy\n          color={\"blue\"}\n          weight={\"medium\"}\n          size={\"small\"}\n          mb={\"small\"}\n        >\n          {labelTop}\n        </Copy>\n      }\n      <div className={css(baseStyles.progress)}>\n        <div className={css(baseStyles.bg)}>\n          <div className={css(baseStyles.bgFilter)}>\n            <div className={css(baseStyles.fill)}>\n              { showProgress &&\n                <small className={css(baseStyles.label)}>{ progress }%</small>\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n      { labelBottom &&\n        <Copy\n          weight={\"regular\"}\n          size={\"small\"}\n          mb={\"small\"}\n          right\n        >\n          {labelBottom}\n        </Copy>\n      }\n    </div>\n  )\n}\n\nProgress.defaultProps = {\n  status: \"neutral\",\n  progress: '50',\n  showProgress: true,\n  labelTop: null,\n  labelBottom: null,\n}\n\nProgress.propTypes = {\n  /** Status of Badge to indicate color */\n  status: PropTypes.oneOf([\n    \"danger\",\n    \"info\",\n    \"neutral\",\n    \"success\",\n    \"warning\",\n  ]).isRequired,\n  /** Number Value to indicate % progress */\n  progress: PropTypes.number,\n  /** Option to remove progress & label from progress bar */\n  showProgress: PropTypes.bool,\n  /** Label above the Progress Bar */\n  labelTop: PropTypes.string,\n  /** Label below the Progress Bar */\n  labelBottom: PropTypes.string,\n};\n\nexport default Progress;\n"]}