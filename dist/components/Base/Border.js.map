{"version":3,"sources":["../../../src/components/Base/Border.js"],"names":["styles","base","width","display","borderTop","mt","none","marginTop","space0","small","space1","medium","space2","large","space4","mb","marginBottom","color","borderColor","borderBase","dark","borderDark","light","borderLight","white","borderWhite","whiteO","borderWhiteO","Border","props","baseStyles","create","border","defaultProps","propTypes","oneOf"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,SAAS;AACbC,QAAM;AACJC,WAAO,MADH;AAEJC,aAAS,cAFL;AAGJC,eAAW;AAHP,GADO;;AAObC,MAAI;AACFC,UAAM;AACJC,iBAAW,mBAAQC;AADf,KADJ;AAIFC,WAAO;AACLF,iBAAW,mBAAQG;AADd,KAJL;AAOFC,YAAQ;AACNJ,iBAAW,mBAAQK;AADb,KAPN;AAUFC,WAAO;AACLN,iBAAW,mBAAQO;AADd;AAVL,GAPS;;AAsBbC,MAAI;AACFT,UAAM;AACJU,oBAAc,mBAAQR;AADlB,KADJ;AAIFC,WAAO;AACLO,oBAAc,mBAAQN;AADjB,KAJL;AAOFC,YAAQ;AACNK,oBAAc,mBAAQJ;AADhB,KAPN;AAUFC,WAAO;AACLG,oBAAc,mBAAQF;AADjB;AAVL,GAtBS;;AAqCbG,SAAO;AACLhB,UAAM;AACJiB,mBAAa,kBAAOC;AADhB,KADD;AAILC,UAAM;AACJF,mBAAa,kBAAOG;AADhB,KAJD;AAOLC,WAAO;AACLJ,mBAAa,kBAAOK;AADf,KAPF;AAULC,WAAO;AACLN,mBAAa,kBAAOO;AADf,KAVF;AAaLC,YAAQ;AACNR,mBAAa,kBAAOS;AADd;AAbH;AArCM,CAAf;;AAwDA,IAAMC,SAAS,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA,MAEhBZ,KAFgB,GAEEY,KAFF,CAEhBZ,KAFgB;AAAA,MAETF,EAFS,GAEEc,KAFF,CAETd,EAFS;AAAA,MAELV,EAFK,GAEEwB,KAFF,CAELxB,EAFK;;;AAIxB,MAAMyB,aAAa,sBAAWC,MAAX,CAAkB;AACnCC,yBACKhC,OAAOC,IADZ,EAEMc,MAAMf,OAAOe,EAAP,CAAUA,EAAV,CAFZ,EAGMV,MAAML,OAAOK,EAAP,CAAUA,EAAV,CAHZ,EAIMY,SAASjB,OAAOiB,KAAP,CAAaA,KAAb,CAJf;AADmC,GAAlB,CAAnB;;AASA,SACE,wCAAM,WAAW,oBAAIa,WAAWE,MAAf,CAAjB,GADF;AAGD,CAhBD;;AAkBAJ,OAAOK,YAAP,GAAsB;AACpBhB,SAAO,MADa;AAEpBF,MAAI,QAFgB;AAGpBV,MAAI;AAHgB,CAAtB;;AAMAuB,OAAOM,SAAP,GAAmB;AACjB;AACAjB,SAAO,oBAAUkB,KAAV,CAAgB,CACrB,MADqB,EAErB,MAFqB,EAGrB,OAHqB,EAIrB,OAJqB,EAKrB,QALqB,CAAhB,CAFU;AASjB;AACApB,MAAI,oBAAUoB,KAAV,CAAgB,CAClB,MADkB,EAElB,MAFkB,EAGlB,OAHkB,EAIlB,QAJkB,EAKlB,OALkB,CAAhB,CAVa;AAiBjB;AACA9B,MAAI,oBAAU8B,KAAV,CAAgB,CAClB,MADkB,EAElB,MAFkB,EAGlB,OAHkB,EAIlB,QAJkB,EAKlB,OALkB,CAAhB;AAlBa,CAAnB;;AA2BAP,OAAO5B,MAAP,GAAgBA,MAAhB;;kBAEe4B,M","file":"Border.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { flatten } from 'rambda'\nimport { StyleSheet, css } from 'aphrodite';\nimport { fonts, fontStyles, fontWeight, letterSpacing, colors, spacing } from 'common/styles/variables';\n\nconst styles = {\n  base: {\n    width: '100%',\n    display: 'inline-block',\n    borderTop: '1px solid',\n  },\n\n  mt: {\n    none: {\n      marginTop: spacing.space0,\n    },\n    small: {\n      marginTop: spacing.space1,\n    },\n    medium: {\n      marginTop: spacing.space2,\n    },\n    large: {\n      marginTop: spacing.space4,\n    },\n  },\n\n  mb: {\n    none: {\n      marginBottom: spacing.space0,\n    },\n    small: {\n      marginBottom: spacing.space1,\n    },\n    medium: {\n      marginBottom: spacing.space2,\n    },\n    large: {\n      marginBottom: spacing.space4,\n    },\n  },\n\n  color: {\n    base: {\n      borderColor: colors.borderBase,\n    },\n    dark: {\n      borderColor: colors.borderDark,\n    },\n    light: {\n      borderColor: colors.borderLight,\n    },\n    white: {\n      borderColor: colors.borderWhite,\n    },\n    whiteO: {\n      borderColor: colors.borderWhiteO,\n    },\n  },\n};\n\nconst Border = (props) => {\n\n  const { color, mb, mt } = props;\n\n  const baseStyles = StyleSheet.create({\n    border: {\n      ...styles.base,\n      ...(mb && styles.mb[mb]),\n      ...(mt && styles.mt[mt]),\n      ...(color && styles.color[color]),\n    }\n  });\n\n  return (\n    <span className={css(baseStyles.border)}></span>\n  );\n}\n\nBorder.defaultProps = {\n  color: \"dark\",\n  mb: \"medium\",\n  mt: \"medium\",\n}\n\nBorder.propTypes = {\n  /** The Border color */\n  color: PropTypes.oneOf([\n    \"base\",\n    \"dark\",\n    \"light\",\n    \"white\",\n    \"whiteO\"\n  ]),\n  /** Margin bottom  */\n  mb: PropTypes.oneOf([\n    \"none\",\n    \"tiny\",\n    \"small\",\n    \"medium\",\n    \"large\",\n  ]),\n  /** Margin top  */\n  mt: PropTypes.oneOf([\n    \"none\",\n    \"tiny\",\n    \"small\",\n    \"medium\",\n    \"large\",\n  ]),\n};\n\nBorder.styles = styles;\n\nexport default Border;\n"]}