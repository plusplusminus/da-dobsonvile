{"version":3,"sources":["../../../src/components/Compositions/Sticker.js"],"names":["styles","sticker","base","borderRadius","space05","marginBottom","space2","overflow","display","height","imageUrl","backgroundSize","backgroundPosition","header","alignItems","wrapper","padding","space4","paddingTop","space3","justifyContent","flexDirection","border","color","white","backgroundColor","brandWhite","borderColor","borderLight","blue","brandBlue","green","brandGreen","red","brandRed","yellow","brandYellow","Sticker","title","content","icon","baseStyles","create","backgroundImage","space0","defaultProps","propTypes","string","isRequired","oneOf"],"mappings":"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","file":"Sticker.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, css } from 'aphrodite';\nimport { fonts, fontStyles, fontWeight, colors, spacing, letterSpacing, opacity } from 'common/styles/variables';\nimport { dobsonville } from 'common/images';\nimport { Heading, Icon, Copy } from 'components';\nimport {rgba} from '../../utils/helpers'\n\nconst styles = {\n  sticker:{\n    base:{\n      borderRadius: spacing.space05,\n      marginBottom: spacing.space2,\n      overflow: 'hidden',\n      display: 'inline-block',\n      height: '100%',\n    },\n    imageUrl:{\n      backgroundSize: 'cover',\n      backgroundPosition: 'center center',\n    },\n  },\n  header:{\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper:{\n    base:{\n      padding: spacing.space4,\n      paddingTop: spacing.space3,\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start',\n      flexDirection: 'column',\n      border: '1px solid',\n      height: '100%',\n    },\n  },\n  color: {\n    white: {\n      base:{\n        backgroundColor: rgba(colors.brandWhite, 1),\n        borderColor: colors.borderLight,\n      },\n      imageUrl: {\n        backgroundColor: rgba(colors.brandWhite, 0.9),\n        borderColor: colors.borderLight,\n      }\n    },\n    blue: {\n      base:{\n        backgroundColor: rgba(colors.brandBlue, 1),\n        borderColor: colors.brandBlue,\n      },\n      imageUrl: {\n        backgroundColor: rgba(colors.brandBlue, 0.9),\n        borderColor: colors.brandBlue,\n      }\n    },\n    green: {\n      base:{\n        backgroundColor: rgba(colors.brandGreen, 1),\n        borderColor: colors.brandGreen,\n      },\n      imageUrl: {\n        backgroundColor: rgba(colors.brandGreen, 0.9),\n        borderColor: colors.brandGreen,\n      }\n    },\n    red: {\n      base:{\n        backgroundColor: rgba(colors.brandRed, 1),\n        borderColor: colors.brandRed,\n      },\n      imageUrl: {\n        backgroundColor: rgba(colors.brandRed, 0.9),\n        borderColor: colors.brandRed,\n      }\n    },\n    yellow: {\n      base:{\n        backgroundColor: rgba(colors.brandYellow, 1),\n        borderColor: colors.brandYellow,\n      },\n      imageUrl: {\n        backgroundColor: rgba(colors.brandYellow, 0.9),\n        borderColor: colors.brandYellow,\n      }\n    },\n  },\n};\n\n  const Sticker = ({ color, imageUrl, title, content, icon}) => {\n\n  const baseStyles = StyleSheet.create({\n    sticker: {\n      ...styles.sticker.base,\n      ...(color && styles.color[color]),\n      ...(imageUrl && styles.sticker.imageUrl),\n      backgroundImage: `url(${imageUrl})`,\n    },\n    header:{\n      ...styles.header,\n    },\n    wrapper:{\n      ...styles.wrapper.base,\n      ...(imageUrl && color && styles.color[color].imageUrl),\n      ...(!imageUrl && color && styles.color[color].base),\n    },\n  });\n\n  return (\n    <div className={css(baseStyles.sticker)}>\n      <div className={css(baseStyles.wrapper)}>\n        <div className={css(baseStyles.header)}>\n          { icon &&\n            <Icon\n              ml={spacing.space0}\n              mr={spacing.space2}\n              color={ color === \"white\" ? colors.brandBlue : colors.brandWhite }\n              fs={\"49px\"}\n              name={icon}\n            />\n          }\n          { title &&\n            <Heading\n              size={\"huge\"}\n              weight={\"regular\"}\n              color={ color === \"white\" ? \"blue\" : \"white\" }\n              mb={\"tiny\"}\n            >\n              {title}\n            </Heading>\n          }\n        </div>\n\n        { content &&\n          <Copy\n            color={ color === \"white\" ? \"blue\" : \"white\" }\n            weight={ title || icon ? \"light\" : \"regular\" }\n            size={ title || icon ? \"medium\" : \"huge\"}\n            mb={\"none\"}\n          >\n            { content }\n          </Copy>\n        }\n      </div>\n    </div>\n  )\n}\n\nSticker.defaultProps = {\n  imageUrl: null,\n  title: null,\n  icon: null,\n  color: \"white\",\n  content: null,\n}\n\nSticker.propTypes = {\n  /** Content of Component */\n  content: PropTypes.string.isRequired,\n  /** Icon for the Title */\n  icon: PropTypes.string,\n  /** ImageUrl for background effect */\n  imageUrl: PropTypes.string,\n  /** Title of Sticker Component */\n  title: PropTypes.string,\n  /** Background Color Sticker Component */\n  color: PropTypes.oneOf([\n    \"white\",\n    \"blue\",\n    \"red\",\n    \"green\",\n    \"yellow\",\n  ]),\n}\n\nexport default Sticker;\n"]}